name: Weekly Contributor Leaderboard

on:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch contributor stats and update leaderboard
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching contributor stats..."
          
          # Set date range for the past week
          since_date=$(date -d 'last Monday' --utc +%Y-%m-%dT%H:%M:%SZ)
          until_date=$(date --utc +%Y-%m-%dT%H:%M:%SZ)
          
          # Initialize leaderboard markdown file
          echo "# Weekly Contributor Leaderboard" > leaderboard.md
          echo "" >> leaderboard.md
          echo "Last updated: $(date --utc)" >> leaderboard.md
          echo "Period: Past week" >> leaderboard.md
          echo "" >> leaderboard.md
          echo "| Contributor | Commits | Issues | Pull Requests | Reviews | Badge |" >> leaderboard.md
          echo "|-------------|---------|---------|---------------|---------|-------|" >> leaderboard.md
          
          # Function to fetch all pages
          fetch_all_pages() {
            local url=$1
            local result="[]"
            local page=1
            
            while true; do
              local response=$(curl -s \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "${url}&page=${page}&per_page=100")
              
              # Break if empty or invalid response
              if [ -z "$response" ] || [ "$response" = "[]" ]; then
                break
              fi
              
              result=$(echo "$result $response" | jq -s 'add')
              
              # Break if less than 100 items (last page)
              if [ $(echo "$response" | jq '. | length') -lt 100 ]; then
                break
              fi
              
              ((page++))
            done
            
            echo "$result"
          }

          # Fetch all data
          contributors_commits=$(fetch_all_pages "https://api.github.com/repos/${{ github.repository }}/commits?since=$since_date&until=$until_date")
          contributors_issues=$(fetch_all_pages "https://api.github.com/repos/${{ github.repository }}/issues?state=all&since=$since_date")
          contributors_prs=$(fetch_all_pages "https://api.github.com/repos/${{ github.repository }}/pulls?state=all&since=$since_date")

          # Process commits
          echo "$contributors_commits" | jq -r '.[] | select(.author != null and .author.login != "github-actions[bot]" and .author.login != "actions-user") | "\(.author.login) | 1"' | \
            awk -F '|' '{ a[$1]+=$2 } END { for (i in a) print i, a[i] }' | \
            sort -k2 -nr | \
            while read contributor commits; do
              # Get badge based on commits
              if [ "$commits" -gt 10 ]; then
                badge="🏆 Top Contributor"
              elif [ "$commits" -gt 5 ]; then
                badge="⭐ Rising Star"
              elif [ "$commits" -gt 2 ]; then
                badge="💪 Consistent Contributor"
              else
                badge="🌱 New Contributor"
              fi
              
              echo "| @$contributor | $commits | 0 | 0 | 0 | $badge |" >> leaderboard.md
            done

          # Process issues
          echo "$contributors_issues" | jq -r '.[] | select(.pull_request == null and .user != null and .user.login != "github-actions[bot]" and .user.login != "actions-user") | "\(.user.login) | 1"' | \
            awk -F '|' '{ a[$1]+=$2 } END { for (i in a) print i, a[i] }' | \
            sort -k2 -nr | \
            while read contributor issues; do
              if [ "$issues" -gt 5 ]; then
                badge="🎯 Issue Master"
              elif [ "$issues" -gt 2 ]; then
                badge="📝 Active Issue Creator"
              else
                badge="🌱 New Contributor"
              fi
              
              # Update existing entry or add new one
              if grep -q "| @$contributor |" leaderboard.md; then
                sed -i "/| @$contributor |/s/| 0 | 0 | 0 |/| $issues | 0 | 0 |/" leaderboard.md
                # Update badge if it's more prestigious
                if [ "$issues" -gt 5 ]; then
                  sed -i "/| @$contributor |/s/| [^|]*|$/ | $badge |/" leaderboard.md
                fi
              else
                echo "| @$contributor | 0 | $issues | 0 | 0 | $badge |" >> leaderboard.md
              fi
            done

          # Process pull requests
          echo "$contributors_prs" | jq -r '.[] | select(.user != null and .user.login != "github-actions[bot]" and .user.login != "actions-user") | "\(.user.login) | 1"' | \
            awk -F '|' '{ a[$1]+=$2 } END { for (i in a) print i, a[i] }' | \
            sort -k2 -nr | \
            while read contributor prs; do
              if [ "$prs" -gt 5 ]; then
                badge="🚀 PR Master"
              elif [ "$prs" -gt 2 ]; then
                badge="📦 Active PR Creator"
              else
                badge="🌱 New Contributor"
              fi
              
              # Update existing entry or add new one
              if grep -q "| @$contributor |" leaderboard.md; then
                sed -i "/| @$contributor |/s/| 0 | 0 |/| $prs | 0 |/" leaderboard.md
                # Update badge if it's more prestigious
                if [ "$prs" -gt 5 ]; then
                  sed -i "/| @$contributor |/s/| [^|]*|$/ | $badge |/" leaderboard.md
                fi
              else
                echo "| @$contributor | 0 | 0 | $prs | 0 | $badge |" >> leaderboard.md
              fi
            done

          # Add badge explanation
          echo "" >> leaderboard.md
          echo "## Badge Levels" >> leaderboard.md
          echo "" >> leaderboard.md
          echo "- 🏆 **Top Contributor**: More than 10 commits" >> leaderboard.md
          echo "- ⭐ **Rising Star**: More than 5 commits" >> leaderboard.md
          echo "- 💪 **Consistent Contributor**: More than 2 commits" >> leaderboard.md
          echo "- 🎯 **Issue Master**: More than 5 issues" >> leaderboard.md
          echo "- 📝 **Active Issue Creator**: More than 2 issues" >> leaderboard.md
          echo "- 🚀 **PR Master**: More than 5 PRs" >> leaderboard.md
          echo "- 📦 **Active PR Creator**: More than 2 PRs" >> leaderboard.md
          echo "- 🌱 **New Contributor**: First contribution" >> leaderboard.md

          # Commit and push changes if there are updates
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          git diff --exit-code leaderboard.md || (git add leaderboard.md && git commit -m "🔁 Weekly leaderboard update" && git push)
