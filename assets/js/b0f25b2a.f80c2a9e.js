"use strict";(self.webpackChunkotai_documentation=self.webpackChunkotai_documentation||[]).push([[6967],{8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},8622:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"features/plugin/migration/index","title":"\ud83d\ude9a Migrating Tools & Functions: 0.4 to 0.5","description":"Welcome to the Open TutorAI 0.5 migration guide! If you\'re working on existing projects or building new ones, this guide will walk you through the key changes from version 0.4 to 0.5 and provide an easy-to-follow roadmap for upgrading your Functions. Let\'s make this transition as smooth as possible! \ud83d\ude0a","source":"@site/docs/features/plugin/migration/index.mdx","sourceDirName":"features/plugin/migration","slug":"/features/plugin/migration/","permalink":"/open-tutor-ai-docs/docs/features/plugin/migration/","draft":false,"unlisted":false,"editUrl":"https://github.com/pr-elhajji/open-tutor-ai-CE/docs/features/plugin/migration/index.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"\ud83d\ude9a Migrating Tools & Functions: 0.4 to 0.5"},"sidebar":"tutorialSidebar","previous":{"title":"\u2699\ufe0f Tools","permalink":"/open-tutor-ai-docs/docs/features/plugin/tools/"},"next":{"title":"\ud83d\udda5\ufe0f Workspace","permalink":"/open-tutor-ai-docs/docs/features/workspace/"}}');var s=i(4848),o=i(8453);const r={sidebar_position:3,title:"\ud83d\ude9a Migrating Tools & Functions: 0.4 to 0.5"},l="\ud83d\ude9a Migration Guide: Open TutorAI 0.4 to 0.5",c={},a=[{value:"\ud83e\uddd0 What Has Changed and Why?",id:"-what-has-changed-and-why",level:2},{value:"Key Changes:",id:"key-changes",level:3},{value:"Example:",id:"example",level:4},{value:"\u2705 Step-by-Step Migration Guide",id:"-step-by-step-migration-guide",level:2},{value:"\ud83d\udd04 1. Shifting from <code>apps</code> to <code>routers</code>",id:"-1-shifting-from-apps-to-routers",level:3},{value:"\ud83d\udcdc An Important Example",id:"-an-important-example",level:3},{value:"\ud83d\udc69\u200d\ud83d\udcbb 2. Updating Import Statements",id:"-2-updating-import-statements",level:3},{value:"Before:",id:"before",level:4},{value:"After:",id:"after",level:4},{value:"\ud83d\udcdd <strong>Additional Note: Choosing Between <code>main.chat_completion</code> and <code>utils.chat.generate_chat_completion</code></strong>",id:"-additional-note-choosing-between-mainchat_completion-and-utilschatgenerate_chat_completion",level:3},{value:"Example:",id:"example-1",level:4},{value:"\ud83d\udccb 3. Adapting to Updated Function Signatures",id:"-3-adapting-to-updated-function-signatures",level:3},{value:"Function Signature Changes:",id:"function-signature-changes",level:4},{value:"Example:",id:"example-2",level:4},{value:"\ud83d\udee0\ufe0f How to Refactor Your Custom Function",id:"\ufe0f-how-to-refactor-your-custom-function",level:3},{value:"Before (0.4):",id:"before-04",level:4},{value:"After (0.5):",id:"after-05",level:4},{value:"Important Notes:",id:"important-notes",level:3},{value:"\ud83c\udf1f 4. Recap: Key Concepts in Simple Terms",id:"-4-recap-key-concepts-in-simple-terms",level:3},{value:"\ud83c\udf89 Hooray! You&#39;re Ready!",id:"-hooray-youre-ready",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-migration-guide-open-tutorai-04-to-05",children:"\ud83d\ude9a Migration Guide: Open TutorAI 0.4 to 0.5"})}),"\n",(0,s.jsxs)(n.p,{children:["Welcome to the Open TutorAI 0.5 migration guide! If you're working on existing projects or building new ones, this guide will walk you through the key changes from ",(0,s.jsx)(n.strong,{children:"version 0.4 to 0.5"})," and provide an easy-to-follow roadmap for upgrading your Functions. Let's make this transition as smooth as possible! \ud83d\ude0a"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-what-has-changed-and-why",children:"\ud83e\uddd0 What Has Changed and Why?"}),"\n",(0,s.jsxs)(n.p,{children:["With Open TutorAI 0.5, we\u2019ve overhauled the architecture to make the project ",(0,s.jsx)(n.strong,{children:"simpler, more unified, and scalable"}),". Here's the big picture:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Old Architecture:"})," \ud83c\udfaf Previously, Open TutorAI was built on a ",(0,s.jsx)(n.strong,{children:"sub-app architecture"})," where each app (e.g., ",(0,s.jsx)(n.code,{children:"ollama"}),", ",(0,s.jsx)(n.code,{children:"openai"}),") was a separate FastAPI application. This caused fragmentation and extra complexity when managing apps."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"New Architecture:"})," \ud83d\ude80 With version 0.5, we have transitioned to a ",(0,s.jsx)(n.strong,{children:"single FastAPI app"})," with multiple ",(0,s.jsx)(n.strong,{children:"routers"}),". This means better organization, centralized flow, and reduced redundancy."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-changes",children:"Key Changes:"}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s an overview of what changed:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Apps have been moved to Routers."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Previous: ",(0,s.jsx)(n.code,{children:"open_webui.apps"})]}),"\n",(0,s.jsxs)(n.li,{children:["Now: ",(0,s.jsx)(n.code,{children:"open_webui.routers"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Main app structure simplified."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The old ",(0,s.jsx)(n.code,{children:"open_webui.apps.webui"})," has been transformed into ",(0,s.jsx)(n.code,{children:"open_webui.main"}),", making it the central entry point for the project."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Unified API Endpoint"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open TutorAI 0.5 introduces a ",(0,s.jsx)(n.strong,{children:"unified function"}),", ",(0,s.jsx)(n.code,{children:"chat_completion"}),", in ",(0,s.jsx)(n.code,{children:"open_webui.main"}),", replacing separate functions for models like ",(0,s.jsx)(n.code,{children:"ollama"})," and ",(0,s.jsx)(n.code,{children:"openai"}),". This offers a consistent and streamlined API experience. However, the ",(0,s.jsx)(n.strong,{children:"direct successor"})," of these individual functions is ",(0,s.jsx)(n.code,{children:"generate_chat_completion"})," from ",(0,s.jsx)(n.code,{children:"open_webui.utils.chat"}),". If you prefer a lightweight POST request without handling additional parsing (e.g., files, tools, or misc), this utility function is likely what you want."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Full API flow with parsing (new function):\nfrom open_webui.main import chat_completion\n\n# Lightweight, direct POST request (direct successor):\nfrom open_webui.utils.chat import generate_chat_completion\n"})}),"\n",(0,s.jsx)(n.p,{children:"Choose the approach that best fits your use case!"}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Updated Function Signatures."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Function signatures now adhere to a new format, requiring a ",(0,s.jsx)(n.code,{children:"request"})," object."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"request"})," object can be obtained using the ",(0,s.jsx)(n.code,{children:"__request__"})," parameter in the function signature. Below is an example:"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Pipe:\n    def __init__(self):\n        pass\n\n    async def pipe(\n        self,\n        body: dict,\n        __user__: dict,\n        __request__: Request, # New parameter\n    ) -> str:\n        # Write your function here\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udccc ",(0,s.jsx)(n.strong,{children:"Why did we make these changes?"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"To simplify the codebase, making it easier to extend and maintain."}),"\n",(0,s.jsx)(n.li,{children:"To unify APIs for a more streamlined developer experience."}),"\n",(0,s.jsx)(n.li,{children:"To enhance performance by consolidating redundant elements."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-step-by-step-migration-guide",children:"\u2705 Step-by-Step Migration Guide"}),"\n",(0,s.jsx)(n.p,{children:"Follow this guide to smoothly update your project."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"-1-shifting-from-apps-to-routers",children:["\ud83d\udd04 1. Shifting from ",(0,s.jsx)(n.code,{children:"apps"})," to ",(0,s.jsx)(n.code,{children:"routers"})]}),"\n",(0,s.jsxs)(n.p,{children:["All apps have been renamed and relocated under ",(0,s.jsx)(n.code,{children:"open_webui.routers"}),". This affects imports in your codebase."]}),"\n",(0,s.jsx)(n.p,{children:"Quick changes for import paths:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Old Path"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"New Path"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.apps.ollama"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.routers.ollama"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.apps.openai"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.routers.openai"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.apps.audio"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.routers.audio"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.apps.retrieval"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.routers.retrieval"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.apps.webui"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open_webui.main"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"-an-important-example",children:"\ud83d\udcdc An Important Example"}),"\n",(0,s.jsxs)(n.p,{children:["To clarify the special case of the main app (",(0,s.jsx)(n.code,{children:"webui"}),"), here\u2019s a simple rule of thumb:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Was in ",(0,s.jsx)(n.code,{children:"webui"}),"?"]})," It\u2019s now in the project\u2019s root or ",(0,s.jsx)(n.code,{children:"open_webui.main"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["For example:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Before (0.4):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from open_webui.apps.webui.models import SomeModel  \n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"After (0.5):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from open_webui.models import SomeModel  \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In general, ",(0,s.jsxs)(n.strong,{children:["just replace ",(0,s.jsx)(n.code,{children:"open_webui.apps"})," with ",(0,s.jsx)(n.code,{children:"open_webui.routers"}),"\u2014except for ",(0,s.jsx)(n.code,{children:"webui"}),", which is now ",(0,s.jsx)(n.code,{children:"open_webui.main"}),"!"]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"-2-updating-import-statements",children:"\ud83d\udc69\u200d\ud83d\udcbb 2. Updating Import Statements"}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s look at what this update looks like in your code:"}),"\n",(0,s.jsx)(n.h4,{id:"before",children:"Before:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from open_webui.apps.ollama import main as ollama\nfrom open_webui.apps.openai import main as openai\n"})}),"\n",(0,s.jsx)(n.h4,{id:"after",children:"After:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Separate router imports\nfrom open_webui.routers.ollama import generate_chat_completion\nfrom open_webui.routers.openai import generate_chat_completion\n\n# Or use the unified endpoint\nfrom open_webui.main import chat_completion\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udca1 Pro Tip:"})," Prioritize the unified endpoint (",(0,s.jsx)(n.code,{children:"chat_completion"}),") for simplicity and future compatibility."]}),"\n",(0,s.jsxs)(n.h3,{id:"-additional-note-choosing-between-mainchat_completion-and-utilschatgenerate_chat_completion",children:["\ud83d\udcdd ",(0,s.jsxs)(n.strong,{children:["Additional Note: Choosing Between ",(0,s.jsx)(n.code,{children:"main.chat_completion"})," and ",(0,s.jsx)(n.code,{children:"utils.chat.generate_chat_completion"})]})]}),"\n",(0,s.jsx)(n.p,{children:"Depending on your use case, you can choose between:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"open_webui.main.chat_completion"}),":"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Simulates making a POST request to ",(0,s.jsx)(n.code,{children:"/api/chat/completions"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Processes files, tools, and other miscellaneous tasks."}),"\n",(0,s.jsx)(n.li,{children:"Best when you want the complete API flow handled automatically."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"open_webui.utils.chat.generate_chat_completion"}),":"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Directly makes a POST request without handling extra parsing or tasks."}),"\n",(0,s.jsxs)(n.li,{children:["This is the ",(0,s.jsx)(n.strong,{children:"direct successor"})," to the previous ",(0,s.jsx)(n.code,{children:"main.generate_chat_completions"}),", ",(0,s.jsx)(n.code,{children:"ollama.generate_chat_completion"})," and ",(0,s.jsx)(n.code,{children:"openai.generate_chat_completion"})," functions in Open TutorAI 0.4."]}),"\n",(0,s.jsx)(n.li,{children:"Best for simplified and more lightweight scenarios."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Use this for the full API flow with parsing:\nfrom open_webui.main import chat_completion\n\n# Use this for a stripped-down, direct POST request:\nfrom open_webui.utils.chat import generate_chat_completion\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"-3-adapting-to-updated-function-signatures",children:"\ud83d\udccb 3. Adapting to Updated Function Signatures"}),"\n",(0,s.jsxs)(n.p,{children:["We\u2019ve updated the ",(0,s.jsx)(n.strong,{children:"function signatures"})," to better fit the new architecture. If you're looking for a direct replacement, start with the lightweight utility function ",(0,s.jsx)(n.code,{children:"generate_chat_completion"})," from ",(0,s.jsx)(n.code,{children:"open_webui.utils.chat"}),". For the full API flow, use the new unified ",(0,s.jsx)(n.code,{children:"chat_completion"})," function in ",(0,s.jsx)(n.code,{children:"open_webui.main"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"function-signature-changes",children:"Function Signature Changes:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Old"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Direct Successor (New)"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Unified Option (New)"})})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"openai.generate_chat_completion(form_data: dict, user: UserModel)"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"generate_chat_completion(request: Request, form_data: dict, user: UserModel)"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"chat_completion(request: Request, form_data: dict, user: UserModel)"})})]})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Direct Successor (",(0,s.jsx)(n.code,{children:"generate_chat_completion"}),")"]}),": A lightweight, 1:1 replacement for previous ",(0,s.jsx)(n.code,{children:"ollama"}),"/",(0,s.jsx)(n.code,{children:"openai"})," methods."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Unified Option (",(0,s.jsx)(n.code,{children:"chat_completion"}),")"]}),": Use this for the complete API flow, including file parsing and additional functionality."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,s.jsxs)(n.p,{children:["If you're using ",(0,s.jsx)(n.code,{children:"chat_completion"}),", here\u2019s how your function should look now:"]}),"\n",(0,s.jsx)(n.h3,{id:"\ufe0f-how-to-refactor-your-custom-function",children:"\ud83d\udee0\ufe0f How to Refactor Your Custom Function"}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s rewrite a sample function to match the new structure:"}),"\n",(0,s.jsx)(n.h4,{id:"before-04",children:"Before (0.4):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel\nfrom open_webui.apps.ollama import generate_chat_completion\n\nclass User(BaseModel):\n    id: str\n    email: str\n    name: str\n    role: str\n\nclass Pipe:\n    def __init__(self):\n        pass\n\n    async def pipe(self, body: dict, __user__: dict) -> str:\n        # Calls OpenAI endpoint\n        user = User(**__user__)\n        body["model"] = "llama3.2:latest"\n        return await ollama.generate_chat_completion(body, user)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"after-05",children:"After (0.5):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel\nfrom fastapi import Request\n\nfrom open_webui.utils.chat import generate_chat_completion\n\n\nclass User(BaseModel):\n    id: str\n    email: str\n    name: str\n    role: str\n\n\nclass Pipe:\n    def __init__(self):\n        pass\n\n    async def pipe(\n        self,\n        body: dict,\n        __user__: dict,\n        __request__: Request,\n    ) -> str:\n        # Uses the unified endpoint with updated signature\n        user = User(**__user__)\n        body["model"] = "llama3.2:latest"\n        return await generate_chat_completion(__request__, body, user)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"important-notes",children:"Important Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You must pass a ",(0,s.jsx)(n.code,{children:"Request"})," object (",(0,s.jsx)(n.code,{children:"__request__"}),") in the new function signature."]}),"\n",(0,s.jsxs)(n.li,{children:["Other optional parameters (like ",(0,s.jsx)(n.code,{children:"__user__"})," and ",(0,s.jsx)(n.code,{children:"__event_emitter__"}),") ensure flexibility for more complex use cases."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"-4-recap-key-concepts-in-simple-terms",children:"\ud83c\udf1f 4. Recap: Key Concepts in Simple Terms"}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s a quick cheat sheet to remember:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Apps to Routers:"})," Update all imports from ",(0,s.jsx)(n.code,{children:"open_webui.apps"})," \u27a1\ufe0f ",(0,s.jsx)(n.code,{children:"open_webui.routers"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unified Endpoint:"})," Use ",(0,s.jsx)(n.code,{children:"open_webui.main.chat_completion"})," for simplicity if both ",(0,s.jsx)(n.code,{children:"ollama"})," and ",(0,s.jsx)(n.code,{children:"openai"})," are involved."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adapt Function Signatures:"})," Ensure your functions pass the required ",(0,s.jsx)(n.code,{children:"request"})," object."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-hooray-youre-ready",children:"\ud83c\udf89 Hooray! You're Ready!"}),"\n",(0,s.jsxs)(n.p,{children:["That's it! You've successfully migrated from ",(0,s.jsx)(n.strong,{children:"Open TutorAI 0.4 to 0.5"}),". By refactoring your imports, using the unified endpoint, and updating function signatures, you'll be fully equipped to leverage the latest features and improvements in version 0.5."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcac ",(0,s.jsx)(n.strong,{children:"Questions or Feedback?"}),"\nIf you run into any issues or have suggestions, feel free to open a ",(0,s.jsx)(n.a,{href:"https://github.com/open-webui/open-webui",children:"GitHub issue"})," or ask in the community forums!"]}),"\n",(0,s.jsx)(n.p,{children:"Happy coding! \u2728"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);