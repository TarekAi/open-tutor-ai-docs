"use strict";(self.webpackChunkotai_documentation=self.webpackChunkotai_documentation||[]).push([[8496],{7542:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-started/api-endpoints","title":"\ud83d\udd17 API Endpoints","description":"This guide provides essential information on how to interact with the API endpoints effectively to achieve seamless integration and automation using our models. Please note that this is an experimental setup and may undergo future updates for enhancement.","source":"@site/docs/getting-started/api-endpoints.md","sourceDirName":"getting-started","slug":"/getting-started/api-endpoints","permalink":"/open-tutor-ai-docs/docs/getting-started/api-endpoints","draft":false,"unlisted":false,"editUrl":"https://github.com/pr-elhajji/open-tutor-ai-CE/docs/getting-started/api-endpoints.md","tags":[],"version":"current","sidebarPosition":400,"frontMatter":{"sidebar_position":400,"title":"\ud83d\udd17 API Endpoints"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd04 Updating Open TutorAI","permalink":"/open-tutor-ai-docs/docs/getting-started/updating"},"next":{"title":"\u2b50 Features","permalink":"/open-tutor-ai-docs/docs/features/"}}');var s=i(4848),o=i(8453);const r={sidebar_position:400,title:"\ud83d\udd17 API Endpoints"},l=void 0,a={},d=[{value:"Authentication",id:"authentication",level:2},{value:"Notable API Endpoints",id:"notable-api-endpoints",level:2},{value:"\ud83d\udcdc Retrieve All Models",id:"-retrieve-all-models",level:3},{value:"\ud83d\udcac Chat Completions",id:"-chat-completions",level:3},{value:"\ud83e\udde9 Retrieval Augmented Generation (RAG)",id:"-retrieval-augmented-generation-rag",level:3},{value:"Uploading Files",id:"uploading-files",level:4},{value:"Adding Files to Knowledge Collections",id:"adding-files-to-knowledge-collections",level:4},{value:"Using Files and Collections in Chat Completions",id:"using-files-and-collections-in-chat-completions",level:4},{value:"Using an Individual File in Chat Completions",id:"using-an-individual-file-in-chat-completions",level:5},{value:"Using a Knowledge Collection in Chat Completions",id:"using-a-knowledge-collection-in-chat-completions",level:5},{value:"Advantages of Using Open TutorAI as a Unified LLM Provider",id:"advantages-of-using-open-tutorai-as-a-unified-llm-provider",level:2},{value:"Swagger Documentation Links",id:"swagger-documentation-links",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This guide provides essential information on how to interact with the API endpoints effectively to achieve seamless integration and automation using our models. Please note that this is an experimental setup and may undergo future updates for enhancement."}),"\n",(0,s.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsxs)(n.p,{children:["To ensure secure access to the API, authentication is required \ud83d\udee1\ufe0f. You can authenticate your API requests using the Bearer Token mechanism. Obtain your API key from ",(0,s.jsx)(n.strong,{children:"Settings > Account"})," in the Open TutorAI, or alternatively, use a JWT (JSON Web Token) for authentication."]}),"\n",(0,s.jsx)(n.h2,{id:"notable-api-endpoints",children:"Notable API Endpoints"}),"\n",(0,s.jsx)(n.h3,{id:"-retrieve-all-models",children:"\ud83d\udcdc Retrieve All Models"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"GET /api/models"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Fetches all models created or added via Open TutorAI."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -H "Authorization: Bearer YOUR_API_KEY" http://localhost:3000/api/models\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-chat-completions",children:"\ud83d\udcac Chat Completions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"POST /api/chat/completions"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Serves as an OpenAI API compatible chat completion endpoint for models on Open TutorAI including Ollama models, OpenAI models, and Open TutorAI Function models."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Curl Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/api/chat/completions \\\r\n-H "Authorization: Bearer YOUR_API_KEY" \\\r\n-H "Content-Type: application/json" \\\r\n-d \'{\r\n      "model": "llama3.1",\r\n      "messages": [\r\n        {\r\n          "role": "user",\r\n          "content": "Why is the sky blue?"\r\n        }\r\n      ]\r\n    }\'\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Python Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\r\n\r\ndef chat_with_model(token):\r\n    url = \'http://localhost:3000/api/chat/completions\'\r\n    headers = {\r\n        \'Authorization\': f\'Bearer {token}\',\r\n        \'Content-Type\': \'application/json\'\r\n    }\r\n    data = {\r\n      "model": "granite3.1-dense:8b",\r\n      "messages": [\r\n        {\r\n          "role": "user",\r\n          "content": "Why is the sky blue?"\r\n        }\r\n      ]\r\n    }\r\n    response = requests.post(url, headers=headers, data=data)\r\n    return response.json()\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-retrieval-augmented-generation-rag",children:"\ud83e\udde9 Retrieval Augmented Generation (RAG)"}),"\n",(0,s.jsx)(n.p,{children:"The Retrieval Augmented Generation (RAG) feature allows you to enhance responses by incorporating data from external sources. Below, you will find the methods for managing files and knowledge collections via the API, and how to use them in chat completions effectively."}),"\n",(0,s.jsx)(n.h4,{id:"uploading-files",children:"Uploading Files"}),"\n",(0,s.jsx)(n.p,{children:"To utilize external data in RAG responses, you first need to upload the files. The content of the uploaded file is automatically extracted and stored in a vector database."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"POST /api/v1/files/"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Curl Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST -H "Authorization: Bearer YOUR_API_KEY" -H "Accept: application/json" \\\r\n-F "file=@/path/to/your/file" http://localhost:3000/api/v1/files/\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Python Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests\r\n\r\ndef upload_file(token, file_path):\r\n    url = 'http://localhost:3000/api/v1/files/'\r\n    headers = {\r\n        'Authorization': f'Bearer {token}',\r\n        'Accept': 'application/json'\r\n    }\r\n    files = {'file': open(file_path, 'rb')}\r\n    response = requests.post(url, headers=headers, files=files)\r\n    return response.json()\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"adding-files-to-knowledge-collections",children:"Adding Files to Knowledge Collections"}),"\n",(0,s.jsx)(n.p,{children:"After uploading, you can group files into a knowledge collection or reference them individually in chats."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"POST /api/v1/knowledge/{id}/file/add"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Curl Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/api/v1/knowledge/{knowledge_id}/file/add \\\r\n-H "Authorization: Bearer YOUR_API_KEY" \\\r\n-H "Content-Type: application/json" \\\r\n-d \'{"file_id": "your-file-id-here"}\'\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Python Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests\r\n\r\ndef add_file_to_knowledge(token, knowledge_id, file_id):\r\n    url = f'http://localhost:3000/api/v1/knowledge/{knowledge_id}/file/add'\r\n    headers = {\r\n        'Authorization': f'Bearer {token}',\r\n        'Content-Type': 'application/json'\r\n    }\r\n    data = {'file_id': file_id}\r\n    response = requests.post(url, headers=headers, json=data)\r\n    return response.json()\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"using-files-and-collections-in-chat-completions",children:"Using Files and Collections in Chat Completions"}),"\n",(0,s.jsx)(n.p,{children:"You can reference both individual files or entire collections in your RAG queries for enriched responses."}),"\n",(0,s.jsx)(n.h5,{id:"using-an-individual-file-in-chat-completions",children:"Using an Individual File in Chat Completions"}),"\n",(0,s.jsx)(n.p,{children:"This method is beneficial when you want to focus the chat model's response on the content of a specific file."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"POST /api/chat/completions"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Curl Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/api/chat/completions \\\r\n-H "Authorization: Bearer YOUR_API_KEY" \\\r\n-H "Content-Type: application/json" \\\r\n-d \'{\r\n      "model": "gpt-4-turbo",\r\n      "messages": [\r\n        {"role": "user", "content": "Explain the concepts in this document."}\r\n      ],\r\n      "files": [\r\n        {"type": "file", "id": "your-file-id-here"}\r\n      ]\r\n    }\'\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Python Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests\r\n\r\ndef chat_with_file(token, model, query, file_id):\r\n    url = 'http://localhost:3000/api/chat/completions'\r\n    headers = {\r\n        'Authorization': f'Bearer {token}',\r\n        'Content-Type': 'application/json'\r\n    }\r\n    payload = {\r\n        'model': model,\r\n        'messages': [{'role': 'user', 'content': query}],\r\n        'files': [{'type': 'file', 'id': file_id}]\r\n    }\r\n    response = requests.post(url, headers=headers, json=payload)\r\n    return response.json()\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"using-a-knowledge-collection-in-chat-completions",children:"Using a Knowledge Collection in Chat Completions"}),"\n",(0,s.jsx)(n.p,{children:"Leverage a knowledge collection to enhance the response when the inquiry may benefit from a broader context or multiple documents."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": ",(0,s.jsx)(n.code,{children:"POST /api/chat/completions"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Curl Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/api/chat/completions \\\r\n-H "Authorization: Bearer YOUR_API_KEY" \\\r\n-H "Content-Type: application/json" \\\r\n-d \'{\r\n      "model": "gpt-4-turbo",\r\n      "messages": [\r\n        {"role": "user", "content": "Provide insights on the historical perspectives covered in the collection."}\r\n      ],\r\n      "files": [\r\n        {"type": "collection", "id": "your-collection-id-here"}\r\n      ]\r\n    }\'\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Python Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests\r\n\r\ndef chat_with_collection(token, model, query, collection_id):\r\n    url = 'http://localhost:3000/api/chat/completions'\r\n    headers = {\r\n        'Authorization': f'Bearer {token}',\r\n        'Content-Type': 'application/json'\r\n    }\r\n    payload = {\r\n        'model': model,\r\n        'messages': [{'role': 'user', 'content': query}],\r\n        'files': [{'type': 'collection', 'id': collection_id}]\r\n    }\r\n    response = requests.post(url, headers=headers, json=payload)\r\n    return response.json()\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"These methods enable effective utilization of external knowledge via uploaded files and curated knowledge collections, enhancing chat applications' capabilities using the Open TutorAI API. Whether using files individually or within collections, you can customize the integration based on your specific needs."}),"\n",(0,s.jsx)(n.h2,{id:"advantages-of-using-open-tutorai-as-a-unified-llm-provider",children:"Advantages of Using Open TutorAI as a Unified LLM Provider"}),"\n",(0,s.jsx)(n.p,{children:"Open TutorAI offers a myriad of benefits, making it an essential tool for developers and businesses alike:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unified Interface"}),": Simplify your interactions with different LLMs through a single, integrated platform."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ease of Implementation"}),": Quick start integration with comprehensive documentation and community support."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"swagger-documentation-links",children:"Swagger Documentation Links"}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["Make sure to set the ",(0,s.jsx)(n.code,{children:"ENV"})," environment variable to ",(0,s.jsx)(n.code,{children:"dev"})," in order to access the Swagger documentation for any of these services. Without this configuration, the documentation will not be available."]})}),"\n",(0,s.jsx)(n.p,{children:"Access detailed API documentation for different services provided by Open TutorAI:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Application"}),(0,s.jsx)(n.th,{children:"Documentation Path"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Main"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/docs"})})]})})]}),"\n",(0,s.jsx)(n.p,{children:"By following these guidelines, you can swiftly integrate and begin utilizing the Open TutorAI API. Should you encounter any issues or have questions, feel free to reach out through our Discord Community or consult the FAQs. Happy coding! \ud83c\udf1f"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);