"use strict";(self.webpackChunkotai_documentation=self.webpackChunkotai_documentation||[]).push([[5762],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},8459:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting-started/advanced-topics/logging","title":"\ud83d\udcdc Open WebUI Logging","description":"Browser Client Logging ##","source":"@site/docs/getting-started/advanced-topics/logging.md","sourceDirName":"getting-started/advanced-topics","slug":"/getting-started/advanced-topics/logging","permalink":"/open-tutor-ai-docs/docs/getting-started/advanced-topics/logging","draft":false,"unlisted":false,"editUrl":"https://github.com/pr-elhajji/open-tutor-ai-CE/docs/getting-started/advanced-topics/logging.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"\ud83d\udcdc Open WebUI Logging"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udee0\ufe0f Development Guide","permalink":"/open-tutor-ai-docs/docs/getting-started/advanced-topics/development"},"next":{"title":"\ud83d\udd12HTTPS Encryption","permalink":"/open-tutor-ai-docs/docs/getting-started/advanced-topics/https-encryption"}}');var s=i(4848),r=i(8453);const o={sidebar_position:5,title:"\ud83d\udcdc Open WebUI Logging"},d=void 0,l={},c=[{value:"Browser Client Logging",id:"browser-client-logging",level:2},{value:"Application Server/Backend Logging",id:"application-serverbackend-logging",level:2},{value:"Logging Levels",id:"logging-levels",level:3},{value:"Global",id:"global",level:3},{value:"App/Backend",id:"appbackend",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"browser-client-logging",children:"Browser Client Logging"}),"\n",(0,s.jsxs)(n.p,{children:["Client logging generally occurs via ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/log_static",children:"JavaScript"})," ",(0,s.jsx)(n.code,{children:"console.log()"})," and can be accessed using the built-in browser-specific developer tools:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Blink","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.chrome.com/docs/devtools/",children:"Chrome/Chromium"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/overview",children:"Edge"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Gecko","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://firefox-source-docs.mozilla.org/devtools-user/",children:"Firefox"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["WebKit","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.apple.com/safari/tools/",children:"Safari"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"application-serverbackend-logging",children:"Application Server/Backend Logging"}),"\n",(0,s.jsxs)(n.p,{children:["Logging is an ongoing work-in-progress but some level of control is available using environment variables. ",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/howto/logging.html",children:"Python Logging"})," ",(0,s.jsx)(n.code,{children:"log()"})," and ",(0,s.jsx)(n.code,{children:"print()"})," statements send information to the console. The default level is ",(0,s.jsx)(n.code,{children:"INFO"}),". Ideally, sensitive data will only be exposed with ",(0,s.jsx)(n.code,{children:"DEBUG"})," level."]}),"\n",(0,s.jsx)(n.h3,{id:"logging-levels",children:"Logging Levels"}),"\n",(0,s.jsxs)(n.p,{children:["The following ",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/howto/logging.html#logging-levels",children:"logging levels"})," values are supported:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Level"}),(0,s.jsx)(n.th,{children:"Numeric value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CRITICAL"})}),(0,s.jsx)(n.td,{children:"50"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ERROR"})}),(0,s.jsx)(n.td,{children:"40"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WARNING"})}),(0,s.jsx)(n.td,{children:"30"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"INFO"})}),(0,s.jsx)(n.td,{children:"20"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DEBUG"})}),(0,s.jsx)(n.td,{children:"10"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"NOTSET"})}),(0,s.jsx)(n.td,{children:"0"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"global",children:"Global"}),"\n",(0,s.jsxs)(n.p,{children:["The default global log level of ",(0,s.jsx)(n.code,{children:"INFO"})," can be overridden with the ",(0,s.jsx)(n.code,{children:"GLOBAL_LOG_LEVEL"})," environment variable. When set, this executes a ",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/library/logging.html#logging.basicConfig",children:"basicConfig"})," statement with the ",(0,s.jsx)(n.code,{children:"force"})," argument set to ",(0,s.jsx)(n.em,{children:"True"})," within ",(0,s.jsx)(n.code,{children:"config.py"}),". This results in reconfiguration of all attached loggers:"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"If this keyword argument is specified as true, any existing handlers attached to the root logger are removed and closed, before carrying out the configuration as specified by the other arguments."})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The stream uses standard output (",(0,s.jsx)(n.code,{children:"sys.stdout"}),"). In addition to all Open-WebUI ",(0,s.jsx)(n.code,{children:"log()"})," statements, this also affects any imported Python modules that use the Python Logging module ",(0,s.jsx)(n.code,{children:"basicConfig"})," mechanism including ",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/library/urllib.html",children:"urllib"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, to set ",(0,s.jsx)(n.code,{children:"DEBUG"})," logging level as a Docker parameter use:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'--env GLOBAL_LOG_LEVEL="DEBUG"\n'})}),"\n",(0,s.jsx)(n.p,{children:"or for Docker Compose put this in the environment section of the docker-compose.yml file (notice the absence of quotation signs):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"environment:\n  - GLOBAL_LOG_LEVEL=DEBUG\n"})}),"\n",(0,s.jsx)(n.h3,{id:"appbackend",children:"App/Backend"}),"\n",(0,s.jsxs)(n.p,{children:["Some level of granularity is possible using any of the following combination of variables. Note that ",(0,s.jsx)(n.code,{children:"basicConfig"})," ",(0,s.jsx)(n.code,{children:"force"})," isn't presently used so these statements may only affect Open-WebUI logging and not 3rd party modules."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Environment Variable"}),(0,s.jsx)(n.th,{children:"App/Backend"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AUDIO_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Audio transcription using faster-whisper, TTS etc."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"COMFYUI_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"ComfyUI integration handling"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CONFIG_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Configuration handling"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DB_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Internal Peewee Database"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"IMAGES_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"AUTOMATIC1111 stable diffusion image generation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MAIN_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Main (root) execution"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MODELS_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"LLM model interaction, authentication, etc."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OLLAMA_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Ollama backend interaction"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OPENAI_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"OpenAI interaction"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RAG_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Retrieval-Augmented Generation using Chroma/Sentence-Transformers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WEBHOOK_LOG_LEVEL"})}),(0,s.jsx)(n.td,{children:"Authentication webhook extended logging"})]})]})]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);